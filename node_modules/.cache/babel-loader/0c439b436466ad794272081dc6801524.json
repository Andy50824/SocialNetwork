{"ast":null,"code":"const addPost = 'ADD-POST';\nconst updatePost = 'UPDATE-POST';\nlet initialState = {\n  postData: [{\n    id: 1,\n    message: \"Hi, how are you?\",\n    like: 5\n  }, {\n    id: 2,\n    message: \"It's my first post\",\n    like: 6\n  }, {\n    id: 3,\n    message: \"and my second post\",\n    like: 10\n  }],\n  newPostText: ''\n};\n\nconst profileReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let stateCopy = { ...state\n  };\n\n  switch (action.type) {\n    case addPost:\n      {\n        let newPost = {\n          id: 4,\n          message: state.newPostText,\n          like: 0\n        };\n        stateCopy.postData = [...state.postData];\n        stateCopy.postData.push(newPost);\n        stateCopy.newPostText = '';\n        return stateCopy;\n      }\n\n    case updatePost:\n      {\n        let stateCopy = { ...state\n        };\n        stateCopy.newPostText = action.updateData;\n        return stateCopy;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const addPostCreate = () => ({\n  type: addPost\n});\nexport const updatePostCreate = text => ({\n  type: updatePost,\n  updateData: text\n});\nexport default profileReducer;","map":{"version":3,"names":["addPost","updatePost","initialState","postData","id","message","like","newPostText","profileReducer","state","action","stateCopy","type","newPost","push","updateData","addPostCreate","updatePostCreate","text"],"sources":["/Users/andrey/Desktop/Верстка/React-learning/first-app/src/Redux/profileReducer.js"],"sourcesContent":["const addPost = 'ADD-POST'\nconst updatePost = 'UPDATE-POST'\n\nlet initialState = {\n    postData: [\n        { id: 1, message: \"Hi, how are you?\", like: 5 },\n        { id: 2, message: \"It's my first post\", like: 6 },\n        { id: 3, message: \"and my second post\", like: 10 }\n    ],\n    newPostText: ''\n};\n\nconst profileReducer = (state = initialState, action) => {\n    let stateCopy = {...state};\n    \n    switch (action.type) {\n        case addPost: {\n            let newPost = {\n                id: 4,\n                message: state.newPostText,\n                like: 0}\n            \n            stateCopy.postData = [...state.postData]\n            stateCopy.postData.push(newPost);\n            stateCopy.newPostText = ('');\n            return stateCopy}\n        case updatePost: {\n            let stateCopy = {...state};\n            stateCopy.newPostText = action.updateData\n            return stateCopy}\n        default:\n            return state\n}}\n\nexport const addPostCreate = () => ({type: addPost})\nexport const updatePostCreate = (text) => ({\n    type: updatePost, updateData: text})\n\nexport default profileReducer"],"mappings":"AAAA,MAAMA,OAAO,GAAG,UAAhB;AACA,MAAMC,UAAU,GAAG,aAAnB;AAEA,IAAIC,YAAY,GAAG;EACfC,QAAQ,EAAE,CACN;IAAEC,EAAE,EAAE,CAAN;IAASC,OAAO,EAAE,kBAAlB;IAAsCC,IAAI,EAAE;EAA5C,CADM,EAEN;IAAEF,EAAE,EAAE,CAAN;IAASC,OAAO,EAAE,oBAAlB;IAAwCC,IAAI,EAAE;EAA9C,CAFM,EAGN;IAAEF,EAAE,EAAE,CAAN;IAASC,OAAO,EAAE,oBAAlB;IAAwCC,IAAI,EAAE;EAA9C,CAHM,CADK;EAMfC,WAAW,EAAE;AANE,CAAnB;;AASA,MAAMC,cAAc,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBP,YAAyB;EAAA,IAAXQ,MAAW;EACrD,IAAIC,SAAS,GAAG,EAAC,GAAGF;EAAJ,CAAhB;;EAEA,QAAQC,MAAM,CAACE,IAAf;IACI,KAAKZ,OAAL;MAAc;QACV,IAAIa,OAAO,GAAG;UACVT,EAAE,EAAE,CADM;UAEVC,OAAO,EAAEI,KAAK,CAACF,WAFL;UAGVD,IAAI,EAAE;QAHI,CAAd;QAKAK,SAAS,CAACR,QAAV,GAAqB,CAAC,GAAGM,KAAK,CAACN,QAAV,CAArB;QACAQ,SAAS,CAACR,QAAV,CAAmBW,IAAnB,CAAwBD,OAAxB;QACAF,SAAS,CAACJ,WAAV,GAAyB,EAAzB;QACA,OAAOI,SAAP;MAAiB;;IACrB,KAAKV,UAAL;MAAiB;QACb,IAAIU,SAAS,GAAG,EAAC,GAAGF;QAAJ,CAAhB;QACAE,SAAS,CAACJ,WAAV,GAAwBG,MAAM,CAACK,UAA/B;QACA,OAAOJ,SAAP;MAAiB;;IACrB;MACI,OAAOF,KAAP;EAhBR;AAiBF,CApBF;;AAsBA,OAAO,MAAMO,aAAa,GAAG,OAAO;EAACJ,IAAI,EAAEZ;AAAP,CAAP,CAAtB;AACP,OAAO,MAAMiB,gBAAgB,GAAIC,IAAD,KAAW;EACvCN,IAAI,EAAEX,UADiC;EACrBc,UAAU,EAAEG;AADS,CAAX,CAAzB;AAGP,eAAeV,cAAf"},"metadata":{},"sourceType":"module"}