{"ast":null,"code":"import { authAPI } from \"../api/usersAPI\";\nconst set_Auth_User = 'SET-AUTH-USER';\nconst get_Auth_Date = 'GET-AUTH-DATA';\nlet initialState = {\n  userId: null,\n  login: null,\n  email: null,\n  isAuth: false\n};\n\nconst authReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case set_Auth_User:\n      return { ...state,\n        ...action.payload,\n        isAuth: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const setAuthUser = (userId, login, email, isAuth) => ({\n  type: set_Auth_User,\n  payload: {\n    userId,\n    login,\n    email,\n    isAuth\n  }\n});\nexport const auth = () => {\n  return dispatch => {\n    authAPI.getAuth().then(data => {\n      if (data.resultCode === 0) {\n        let {\n          id,\n          login,\n          email\n        } = data.data;\n        dispatch(setAuthUser(id, login, email, true));\n      }\n    });\n  };\n};\nexport default authReducer;","map":{"version":3,"names":["authAPI","set_Auth_User","get_Auth_Date","initialState","userId","login","email","isAuth","authReducer","state","action","type","payload","setAuthUser","auth","dispatch","getAuth","then","data","resultCode","id"],"sources":["/Users/andrey/Desktop/networkproject/SocialNetwork/src/Redux/authReducer.js"],"sourcesContent":["import {authAPI} from \"../api/usersAPI\"\n\nconst set_Auth_User = 'SET-AUTH-USER'\nconst get_Auth_Date = 'GET-AUTH-DATA'\n\n\nlet initialState = {\n    userId: null,\n    login: null,\n    email: null,\n    isAuth: false,\n}\n\nconst authReducer = (state=initialState, action) => {\n    switch (action.type) {\n        case set_Auth_User: \n            return {\n                ...state,\n                ...action.payload,\n                isAuth: true}\n        default:\n            return state\n}}\n\nexport const setAuthUser = (userId, login, email, isAuth) => ({\n    type: set_Auth_User, payload: {userId, login, email, isAuth}})\n\n\n\nexport const auth =() => {\n    return (dispatch) => {\n        authAPI.getAuth().then(data => {\n            if (data.resultCode === 0) {\n            let {id, login, email} = data.data\n            dispatch(setAuthUser(id, login, email, true))}\n          })}\n}\n\nexport default authReducer"],"mappings":"AAAA,SAAQA,OAAR,QAAsB,iBAAtB;AAEA,MAAMC,aAAa,GAAG,eAAtB;AACA,MAAMC,aAAa,GAAG,eAAtB;AAGA,IAAIC,YAAY,GAAG;EACfC,MAAM,EAAE,IADO;EAEfC,KAAK,EAAE,IAFQ;EAGfC,KAAK,EAAE,IAHQ;EAIfC,MAAM,EAAE;AAJO,CAAnB;;AAOA,MAAMC,WAAW,GAAG,YAAgC;EAAA,IAA/BC,KAA+B,uEAAzBN,YAAyB;EAAA,IAAXO,MAAW;;EAChD,QAAQA,MAAM,CAACC,IAAf;IACI,KAAKV,aAAL;MACI,OAAO,EACH,GAAGQ,KADA;QAEH,GAAGC,MAAM,CAACE,OAFP;QAGHL,MAAM,EAAE;MAHL,CAAP;;IAIJ;MACI,OAAOE,KAAP;EAPR;AAQF,CATF;;AAWA,OAAO,MAAMI,WAAW,GAAG,CAACT,MAAD,EAASC,KAAT,EAAgBC,KAAhB,EAAuBC,MAAvB,MAAmC;EAC1DI,IAAI,EAAEV,aADoD;EACrCW,OAAO,EAAE;IAACR,MAAD;IAASC,KAAT;IAAgBC,KAAhB;IAAuBC;EAAvB;AAD4B,CAAnC,CAApB;AAKP,OAAO,MAAMO,IAAI,GAAE,MAAM;EACrB,OAAQC,QAAD,IAAc;IACjBf,OAAO,CAACgB,OAAR,GAAkBC,IAAlB,CAAuBC,IAAI,IAAI;MAC3B,IAAIA,IAAI,CAACC,UAAL,KAAoB,CAAxB,EAA2B;QAC3B,IAAI;UAACC,EAAD;UAAKf,KAAL;UAAYC;QAAZ,IAAqBY,IAAI,CAACA,IAA9B;QACAH,QAAQ,CAACF,WAAW,CAACO,EAAD,EAAKf,KAAL,EAAYC,KAAZ,EAAmB,IAAnB,CAAZ,CAAR;MAA8C;IAC/C,CAJH;EAIK,CALT;AAMH,CAPM;AASP,eAAeE,WAAf"},"metadata":{},"sourceType":"module"}