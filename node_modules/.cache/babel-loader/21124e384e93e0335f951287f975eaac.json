{"ast":null,"code":"const follow = 'follow';\nconst unfollow = 'unfollow';\nlet initialState = {\n  usersData: [{\n    id: 1,\n    img: \"\",\n    followed: true,\n    name: \"Dmitri\",\n    status: \"I am locking for a job\",\n    location: {\n      cityName: \"Minsk\",\n      country: \"Belarus\"\n    }\n  }, {\n    id: 2,\n    img: \"\",\n    followed: false,\n    name: \"Andrew\",\n    status: \"I am study React\",\n    location: {\n      cityName: \"Moscow\",\n      country: \"Russia\"\n    }\n  }, {\n    id: 3,\n    img: \"\",\n    followed: true,\n    name: \"Victor\",\n    status: \"I am student\",\n    location: {\n      cityName: \"Kiev\",\n      country: \"Ukraine\"\n    }\n  }]\n};\n\nconst usersReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case follow:\n      return { ...state,\n        userData: state.usersData.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: true\n            };\n          }\n        })\n      };\n\n    case unfollow:\n      return { ...state,\n        userData: state.userData.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: false\n            };\n          }\n        })\n      };\n\n    case setUsers:\n      return { ...state,\n        userData: [...state.userData, action.users]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const addPostCreate = () => ({\n  type: addPost\n});\nexport const updatePostCreate = text => ({\n  type: updatePost,\n  updateData: text\n});\nexport default usersReducer;","map":{"version":3,"names":["follow","unfollow","initialState","usersData","id","img","followed","name","status","location","cityName","country","usersReducer","state","action","type","userData","map","u","userId","setUsers","users","addPostCreate","addPost","updatePostCreate","text","updatePost","updateData"],"sources":["/Users/andrey/Desktop/Верстка/React-learning/first-app/src/Redux/usersReducer.js"],"sourcesContent":["const follow = 'follow'\nconst unfollow = 'unfollow'\n\nlet initialState = {\n    usersData: [\n        { id: 1, img:\"\", followed: true,  name: \"Dmitri\", status: \"I am locking for a job\", location: {cityName: \"Minsk\", country: \"Belarus\"} },\n        { id: 2, img:\"\", followed: false,  name: \"Andrew\", status: \"I am study React\", location: {cityName: \"Moscow\", country: \"Russia\"} },\n        { id: 3, img:\"\", followed: true,  name: \"Victor\", status: \"I am student\", location: {cityName: \"Kiev\", country: \"Ukraine\"} },\n    ],\n};\n\nconst usersReducer = (state = initialState, action) => {\n    \n    switch (action.type) {\n        case follow:\n            return {...state,\n                userData: state.usersData.map(u => {\n                    if (u.id === action.userId) {\n                        return {...u, followed: true}\n                    }\n                })}\n\n        case unfollow:\n            return {...state,\n                userData: state.userData.map(u => {\n                    if (u.id === action.userId) {\n                        return {...u, followed: false }}} )}              \n        case setUsers:\n            return {...state,\n               userData: [...state.userData, action.users]     \n            }   \n        \n        default:\n            return state\n}}\n\nexport const addPostCreate = () => ({type: addPost})\nexport const updatePostCreate = (text) => ({\n    type: updatePost, updateData: text})\n\nexport default usersReducer"],"mappings":"AAAA,MAAMA,MAAM,GAAG,QAAf;AACA,MAAMC,QAAQ,GAAG,UAAjB;AAEA,IAAIC,YAAY,GAAG;EACfC,SAAS,EAAE,CACP;IAAEC,EAAE,EAAE,CAAN;IAASC,GAAG,EAAC,EAAb;IAAiBC,QAAQ,EAAE,IAA3B;IAAkCC,IAAI,EAAE,QAAxC;IAAkDC,MAAM,EAAE,wBAA1D;IAAoFC,QAAQ,EAAE;MAACC,QAAQ,EAAE,OAAX;MAAoBC,OAAO,EAAE;IAA7B;EAA9F,CADO,EAEP;IAAEP,EAAE,EAAE,CAAN;IAASC,GAAG,EAAC,EAAb;IAAiBC,QAAQ,EAAE,KAA3B;IAAmCC,IAAI,EAAE,QAAzC;IAAmDC,MAAM,EAAE,kBAA3D;IAA+EC,QAAQ,EAAE;MAACC,QAAQ,EAAE,QAAX;MAAqBC,OAAO,EAAE;IAA9B;EAAzF,CAFO,EAGP;IAAEP,EAAE,EAAE,CAAN;IAASC,GAAG,EAAC,EAAb;IAAiBC,QAAQ,EAAE,IAA3B;IAAkCC,IAAI,EAAE,QAAxC;IAAkDC,MAAM,EAAE,cAA1D;IAA0EC,QAAQ,EAAE;MAACC,QAAQ,EAAE,MAAX;MAAmBC,OAAO,EAAE;IAA5B;EAApF,CAHO;AADI,CAAnB;;AAQA,MAAMC,YAAY,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBX,YAAyB;EAAA,IAAXY,MAAW;;EAEnD,QAAQA,MAAM,CAACC,IAAf;IACI,KAAKf,MAAL;MACI,OAAO,EAAC,GAAGa,KAAJ;QACHG,QAAQ,EAAEH,KAAK,CAACV,SAAN,CAAgBc,GAAhB,CAAoBC,CAAC,IAAI;UAC/B,IAAIA,CAAC,CAACd,EAAF,KAASU,MAAM,CAACK,MAApB,EAA4B;YACxB,OAAO,EAAC,GAAGD,CAAJ;cAAOZ,QAAQ,EAAE;YAAjB,CAAP;UACH;QACJ,CAJS;MADP,CAAP;;IAOJ,KAAKL,QAAL;MACI,OAAO,EAAC,GAAGY,KAAJ;QACHG,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeC,GAAf,CAAmBC,CAAC,IAAI;UAC9B,IAAIA,CAAC,CAACd,EAAF,KAASU,MAAM,CAACK,MAApB,EAA4B;YACxB,OAAO,EAAC,GAAGD,CAAJ;cAAOZ,QAAQ,EAAE;YAAjB,CAAP;UAAgC;QAAC,CAF/B;MADP,CAAP;;IAIJ,KAAKc,QAAL;MACI,OAAO,EAAC,GAAGP,KAAJ;QACJG,QAAQ,EAAE,CAAC,GAAGH,KAAK,CAACG,QAAV,EAAoBF,MAAM,CAACO,KAA3B;MADN,CAAP;;IAIJ;MACI,OAAOR,KAAP;EApBR;AAqBF,CAvBF;;AAyBA,OAAO,MAAMS,aAAa,GAAG,OAAO;EAACP,IAAI,EAAEQ;AAAP,CAAP,CAAtB;AACP,OAAO,MAAMC,gBAAgB,GAAIC,IAAD,KAAW;EACvCV,IAAI,EAAEW,UADiC;EACrBC,UAAU,EAAEF;AADS,CAAX,CAAzB;AAGP,eAAeb,YAAf"},"metadata":{},"sourceType":"module"}