{"ast":null,"code":"const follow = 'FOLLOW';\nconst unfollow = 'UNFOLLOW';\nconst setUsers = 'set-users';\nlet initialState = {\n  friendsData: []\n};\n\nconst friendsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case follow:\n      return { ...state,\n        friendsData: state.friendsData.map(f => {\n          if (f.id === action.userId) {\n            return { ...f,\n              followed: true\n            };\n          }\n\n          return f;\n        })\n      };\n\n    case unfollow:\n      return { ...state,\n        friendsData: state.friendsData.map(f => {\n          if (f.id === action.userId) {\n            return { ...f,\n              followed: false\n            };\n          }\n\n          return f;\n        })\n      };\n\n    case setUsers:\n      return { ...state,\n        friendsData: [...state.friendsData, ...action.friends]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const changeToFollow = userId => ({\n  type: follow,\n  userId\n});\nexport const changeToUnfollow = userId => ({\n  type: unfollow,\n  userId\n});\nexport const setUsersForm = friends => ({\n  type: setUsers,\n  friends\n});\nexport default friendsReducer;","map":{"version":3,"names":["follow","unfollow","setUsers","initialState","friendsData","friendsReducer","state","action","type","map","f","id","userId","followed","friends","changeToFollow","changeToUnfollow","setUsersForm"],"sources":["/Users/andrey/Desktop/Верстка/React-learning/first-app/src/Redux/friendsReducer.js"],"sourcesContent":["const follow = 'FOLLOW'\nconst unfollow = 'UNFOLLOW'\nconst setUsers = 'set-users'\n\nlet initialState = {\n    friendsData : []}\n\nconst friendsReducer = (state=initialState, action) => {\n    switch (action.type) {\n        case follow:\n            return {...state,\n                friendsData: state.friendsData.map(f => {\n                    if (f.id === action.userId) {\n                        return {...f, followed: true}\n                    }\n                    return f\n                })}\n        case unfollow:\n            return {...state,\n                friendsData: state.friendsData.map(f => {\n                    if (f.id === action.userId) {\n                        return {...f, followed: false}\n                    }\n                    return f\n                })} \n        case setUsers:\n            return {...state,\n            friendsData: [...state.friendsData, ...action.friends]}   \n\n        default:\n            return state\n}}\n\nexport const changeToFollow = (userId) => ({type: follow, userId})\nexport const changeToUnfollow = (userId) => ({type: unfollow, userId})\nexport const setUsersForm = (friends) => ({type: setUsers, friends})\n\nexport default friendsReducer"],"mappings":"AAAA,MAAMA,MAAM,GAAG,QAAf;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,QAAQ,GAAG,WAAjB;AAEA,IAAIC,YAAY,GAAG;EACfC,WAAW,EAAG;AADC,CAAnB;;AAGA,MAAMC,cAAc,GAAG,YAAgC;EAAA,IAA/BC,KAA+B,uEAAzBH,YAAyB;EAAA,IAAXI,MAAW;;EACnD,QAAQA,MAAM,CAACC,IAAf;IACI,KAAKR,MAAL;MACI,OAAO,EAAC,GAAGM,KAAJ;QACHF,WAAW,EAAEE,KAAK,CAACF,WAAN,CAAkBK,GAAlB,CAAsBC,CAAC,IAAI;UACpC,IAAIA,CAAC,CAACC,EAAF,KAASJ,MAAM,CAACK,MAApB,EAA4B;YACxB,OAAO,EAAC,GAAGF,CAAJ;cAAOG,QAAQ,EAAE;YAAjB,CAAP;UACH;;UACD,OAAOH,CAAP;QACH,CALY;MADV,CAAP;;IAOJ,KAAKT,QAAL;MACI,OAAO,EAAC,GAAGK,KAAJ;QACHF,WAAW,EAAEE,KAAK,CAACF,WAAN,CAAkBK,GAAlB,CAAsBC,CAAC,IAAI;UACpC,IAAIA,CAAC,CAACC,EAAF,KAASJ,MAAM,CAACK,MAApB,EAA4B;YACxB,OAAO,EAAC,GAAGF,CAAJ;cAAOG,QAAQ,EAAE;YAAjB,CAAP;UACH;;UACD,OAAOH,CAAP;QACH,CALY;MADV,CAAP;;IAOJ,KAAKR,QAAL;MACI,OAAO,EAAC,GAAGI,KAAJ;QACPF,WAAW,EAAE,CAAC,GAAGE,KAAK,CAACF,WAAV,EAAuB,GAAGG,MAAM,CAACO,OAAjC;MADN,CAAP;;IAGJ;MACI,OAAOR,KAAP;EAtBR;AAuBF,CAxBF;;AA0BA,OAAO,MAAMS,cAAc,GAAIH,MAAD,KAAa;EAACJ,IAAI,EAAER,MAAP;EAAeY;AAAf,CAAb,CAAvB;AACP,OAAO,MAAMI,gBAAgB,GAAIJ,MAAD,KAAa;EAACJ,IAAI,EAAEP,QAAP;EAAiBW;AAAjB,CAAb,CAAzB;AACP,OAAO,MAAMK,YAAY,GAAIH,OAAD,KAAc;EAACN,IAAI,EAAEN,QAAP;EAAiBY;AAAjB,CAAd,CAArB;AAEP,eAAeT,cAAf"},"metadata":{},"sourceType":"module"}