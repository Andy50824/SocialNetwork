{"ast":null,"code":"var _jsxFileName = \"/Users/andrey/Desktop/\\u0412\\u0435\\u0440\\u0441\\u0442\\u043A\\u0430/React-learning/first-app/src/Components/Profile/Myposts/MyPostsContainer.jsx\";\nimport React from 'react';\nimport { addPostCreate, updatePostCreate } from '../../../Redux/profileReducer';\nimport StoreContext from '../../../StoreContext';\nimport MyPosts from './MyPosts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet MyPostsContainer = () => {\n  return /*#__PURE__*/_jsxDEV(StoreContext.Consumer, {\n    children: store => {\n      let state = store.getState();\n\n      let onAddPost = () => {\n        store.dispatch(addPostCreate());\n      };\n\n      let onPostChange = text => {\n        store.dispatch(updatePostCreate(text));\n      };\n\n      return /*#__PURE__*/_jsxDEV(MyPosts, {\n        onPostChange: onPostChange,\n        onAddPost: onAddPost,\n        postData: state.profilePage.postData,\n        newPostText: state.profilePage.newPostText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 20\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 11\n  }, this);\n};\n\n_c = MyPostsContainer;\nexport default MyPostsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyPostsContainer\");","map":{"version":3,"names":["React","addPostCreate","updatePostCreate","StoreContext","MyPosts","MyPostsContainer","store","state","getState","onAddPost","dispatch","onPostChange","text","profilePage","postData","newPostText"],"sources":["/Users/andrey/Desktop/Верстка/React-learning/first-app/src/Components/Profile/Myposts/MyPostsContainer.jsx"],"sourcesContent":["import React from 'react'\nimport { addPostCreate, updatePostCreate } from '../../../Redux/profileReducer';\nimport StoreContext from '../../../StoreContext';\nimport MyPosts from './MyPosts';\n\nlet MyPostsContainer = () =>{\n   \n        return (\n          <StoreContext.Consumer> \n            { store => {\n                let state = store.getState()\n\n                let onAddPost = () => {\n                  store.dispatch(addPostCreate())}\n              \n                let onPostChange =(text) => {\n                  store.dispatch(updatePostCreate(text))}\n        \n            return <MyPosts onPostChange={onPostChange} onAddPost={onAddPost}\n                    postData={state.profilePage.postData}\n                    newPostText={state.profilePage.newPostText}/>}}\n          </StoreContext.Consumer>)}\n\n   \nexport default MyPostsContainer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,+BAAhD;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,IAAIC,gBAAgB,GAAG,MAAK;EAEpB,oBACE,QAAC,YAAD,CAAc,QAAd;IAAA,UACIC,KAAK,IAAI;MACP,IAAIC,KAAK,GAAGD,KAAK,CAACE,QAAN,EAAZ;;MAEA,IAAIC,SAAS,GAAG,MAAM;QACpBH,KAAK,CAACI,QAAN,CAAeT,aAAa,EAA5B;MAAgC,CADlC;;MAGA,IAAIU,YAAY,GAAGC,IAAD,IAAU;QAC1BN,KAAK,CAACI,QAAN,CAAeR,gBAAgB,CAACU,IAAD,CAA/B;MAAuC,CADzC;;MAGJ,oBAAO,QAAC,OAAD;QAAS,YAAY,EAAED,YAAvB;QAAqC,SAAS,EAAEF,SAAhD;QACC,QAAQ,EAAEF,KAAK,CAACM,WAAN,CAAkBC,QAD7B;QAEC,WAAW,EAAEP,KAAK,CAACM,WAAN,CAAkBE;MAFhC;QAAA;QAAA;QAAA;MAAA,QAAP;IAEsD;EAZxD;IAAA;IAAA;IAAA;EAAA,QADF;AAc4B,CAhBpC;;KAAIV,gB;AAmBJ,eAAeA,gBAAf"},"metadata":{},"sourceType":"module"}