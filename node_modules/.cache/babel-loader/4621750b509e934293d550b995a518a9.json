{"ast":null,"code":"var _jsxFileName = \"/Users/andrey/Desktop/\\u0412\\u0435\\u0440\\u0441\\u0442\\u043A\\u0430/React-learning/first-app/src/Components/Users/UsersContainer.jsx\";\nimport React from 'react';\nimport { follow, unfollow, setUsers, setPage, setTotal, setUserId } from '../../Redux/usersReducer';\nimport Users from './Users';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UsersAPI extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.changePages = p => {\n      this.props.setPage(p);\n      axios.get(\"https://social-network.samuraijs.com/api/1.0/profile\", {\n        params: {\n          userId: this.props.userId\n        }\n      }).then(response => {\n        this.props.setUsers(response.data.items);\n      });\n    };\n\n    this.chooseUser = user => {\n      this.props.setUser(user);\n      axios.get(\"https://social-network.samuraijs.com/api/1.0/users\", {});\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"https://social-network.samuraijs.com/api/1.0/users\", {\n      params: {\n        page: this.props.currentPage,\n        count: this.props.pageSize\n      }\n    }).then(response => {\n      this.props.setUsers(response.data.items);\n      this.props.setTotal(response.data.totalCount);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Users, {\n        totalCount: this.props.totalCount,\n        pageSize: this.props.pageSize,\n        setPage: this.props.setPage,\n        currentPage: this.props.currentPage,\n        changePages: this.changePages,\n        usersData: this.props.usersData,\n        follow: this.props.follow,\n        unfollow: this.props.unfollow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    usersData: state.usersPage.usersData,\n    totalCount: state.usersPage.totalCount,\n    pageSize: state.usersPage.pageSize,\n    currentPage: state.usersPage.currentPage,\n    userId: state.userPage.userId\n  };\n}; // let mapDispatchToProps = (dispatch) => {\n//     return {\n//         follow: (userId) => {\n//             dispatch(follow(userId));\n//         },  \n//         unfollow: (userId) => {\n//             dispatch(unfollow(userId));\n//         },\n//         setUsers: (usersData) => {\n//             dispatch(setUsers(usersData));\n//         },\n//         setPage: (page) => {\n//             dispatch(setPage(page));\n//         },\n//         setTotal: (total) => {\n//             dispatch(setTotal(total));\n//         }\n//     }}\n\n\nconst UsersContainer = connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setUsers,\n  setPage,\n  setTotal,\n  setUserId\n})(UsersAPI);\nexport default UsersContainer;","map":{"version":3,"names":["React","follow","unfollow","setUsers","setPage","setTotal","setUserId","Users","connect","axios","UsersAPI","Component","changePages","p","props","get","params","userId","then","response","data","items","chooseUser","user","setUser","componentDidMount","page","currentPage","count","pageSize","totalCount","render","usersData","mapStateToProps","state","usersPage","userPage","UsersContainer"],"sources":["/Users/andrey/Desktop/Верстка/React-learning/first-app/src/Components/Users/UsersContainer.jsx"],"sourcesContent":["import React from 'react'\nimport { follow, unfollow, setUsers, setPage, setTotal, setUserId} from '../../Redux/usersReducer'\nimport Users from './Users'\nimport {connect} from 'react-redux'\nimport axios from 'axios';\n\n\n\nclass UsersAPI extends React.Component {\n\n    componentDidMount() {\n        axios.get(\"https://social-network.samuraijs.com/api/1.0/users\",\n            {params: {page: this.props.currentPage, \n                count: this.props.pageSize}}).then(response => {\n                this.props.setUsers(response.data.items);\n                this.props.setTotal(response.data.totalCount)\n        })    \n}\n    changePages = (p) => {\n        this.props.setPage(p);\n        axios.get(\"https://social-network.samuraijs.com/api/1.0/profile\",\n        {params: {userId: this.props.userId}}).then(response => {\n        this.props.setUsers(response.data.items)\n    })}\n\n    chooseUser = (user) => {\n        this.props.setUser(user);\n        axios.get(\"https://social-network.samuraijs.com/api/1.0/users\",\n        {})\n\n    }\n    render() {\n        return (\n        <div>\n            <Users totalCount={this.props.totalCount}\n                        pageSize={this.props.pageSize}\n                        setPage={this.props.setPage}\n                        currentPage={this.props.currentPage}\n                        changePages={this.changePages}\n                        usersData={this.props.usersData}\n                        follow={this.props.follow}\n                        unfollow={this.props.unfollow}/>\n        </div>)\n    }}\n\nlet mapStateToProps = (state) => {\n    return {\n        usersData: state.usersPage.usersData,\n        totalCount: state.usersPage.totalCount,\n        pageSize: state.usersPage.pageSize,\n        currentPage: state.usersPage.currentPage, \n        userId: state.userPage.userId   \n    }}\n\n// let mapDispatchToProps = (dispatch) => {\n//     return {\n//         follow: (userId) => {\n//             dispatch(follow(userId));\n//         },  \n//         unfollow: (userId) => {\n//             dispatch(unfollow(userId));\n//         },\n//         setUsers: (usersData) => {\n//             dispatch(setUsers(usersData));\n//         },\n//         setPage: (page) => {\n//             dispatch(setPage(page));\n//         },\n//         setTotal: (total) => {\n//             dispatch(setTotal(total));\n//         }\n//     }}\n\nconst UsersContainer = connect(mapStateToProps,{\n    follow, unfollow, setUsers, setPage, setTotal, setUserId})(UsersAPI);\n\nexport default UsersContainer "],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,QAA3B,EAAqCC,OAArC,EAA8CC,QAA9C,EAAwDC,SAAxD,QAAwE,0BAAxE;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAIA,MAAMC,QAAN,SAAuBV,KAAK,CAACW,SAA7B,CAAuC;EAAA;IAAA;;IAAA,KAUnCC,WAVmC,GAUpBC,CAAD,IAAO;MACjB,KAAKC,KAAL,CAAWV,OAAX,CAAmBS,CAAnB;MACAJ,KAAK,CAACM,GAAN,CAAU,sDAAV,EACA;QAACC,MAAM,EAAE;UAACC,MAAM,EAAE,KAAKH,KAAL,CAAWG;QAApB;MAAT,CADA,EACuCC,IADvC,CAC4CC,QAAQ,IAAI;QACxD,KAAKL,KAAL,CAAWX,QAAX,CAAoBgB,QAAQ,CAACC,IAAT,CAAcC,KAAlC;MACH,CAHG;IAGD,CAfgC;;IAAA,KAiBnCC,UAjBmC,GAiBrBC,IAAD,IAAU;MACnB,KAAKT,KAAL,CAAWU,OAAX,CAAmBD,IAAnB;MACAd,KAAK,CAACM,GAAN,CAAU,oDAAV,EACA,EADA;IAGH,CAtBkC;EAAA;;EAEnCU,iBAAiB,GAAG;IAChBhB,KAAK,CAACM,GAAN,CAAU,oDAAV,EACI;MAACC,MAAM,EAAE;QAACU,IAAI,EAAE,KAAKZ,KAAL,CAAWa,WAAlB;QACLC,KAAK,EAAE,KAAKd,KAAL,CAAWe;MADb;IAAT,CADJ,EAEsCX,IAFtC,CAE2CC,QAAQ,IAAI;MAC/C,KAAKL,KAAL,CAAWX,QAAX,CAAoBgB,QAAQ,CAACC,IAAT,CAAcC,KAAlC;MACA,KAAKP,KAAL,CAAWT,QAAX,CAAoBc,QAAQ,CAACC,IAAT,CAAcU,UAAlC;IACP,CALD;EAMP;;EAcGC,MAAM,GAAG;IACL,oBACA;MAAA,uBACI,QAAC,KAAD;QAAO,UAAU,EAAE,KAAKjB,KAAL,CAAWgB,UAA9B;QACY,QAAQ,EAAE,KAAKhB,KAAL,CAAWe,QADjC;QAEY,OAAO,EAAE,KAAKf,KAAL,CAAWV,OAFhC;QAGY,WAAW,EAAE,KAAKU,KAAL,CAAWa,WAHpC;QAIY,WAAW,EAAE,KAAKf,WAJ9B;QAKY,SAAS,EAAE,KAAKE,KAAL,CAAWkB,SALlC;QAMY,MAAM,EAAE,KAAKlB,KAAL,CAAWb,MAN/B;QAOY,QAAQ,EAAE,KAAKa,KAAL,CAAWZ;MAPjC;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADA;EAWH;;AAnCkC;;AAqCvC,IAAI+B,eAAe,GAAIC,KAAD,IAAW;EAC7B,OAAO;IACHF,SAAS,EAAEE,KAAK,CAACC,SAAN,CAAgBH,SADxB;IAEHF,UAAU,EAAEI,KAAK,CAACC,SAAN,CAAgBL,UAFzB;IAGHD,QAAQ,EAAEK,KAAK,CAACC,SAAN,CAAgBN,QAHvB;IAIHF,WAAW,EAAEO,KAAK,CAACC,SAAN,CAAgBR,WAJ1B;IAKHV,MAAM,EAAEiB,KAAK,CAACE,QAAN,CAAenB;EALpB,CAAP;AAME,CAPN,C,CASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMoB,cAAc,GAAG7B,OAAO,CAACyB,eAAD,EAAiB;EAC3ChC,MAD2C;EACnCC,QADmC;EACzBC,QADyB;EACfC,OADe;EACNC,QADM;EACIC;AADJ,CAAjB,CAAP,CACwCI,QADxC,CAAvB;AAGA,eAAe2B,cAAf"},"metadata":{},"sourceType":"module"}