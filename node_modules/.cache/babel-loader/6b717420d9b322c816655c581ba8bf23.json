{"ast":null,"code":"var _jsxFileName = \"/Users/andrey/Desktop/\\u0412\\u0435\\u0440\\u0441\\u0442\\u043A\\u0430/React-learning/first-app/src/Components/Profile/Myposts/MyPostsContainer.jsx\";\nimport React from 'react';\nimport { addPostCreate, updatePostCreate } from '../../../Redux/profileReducer';\nimport StoreContext from '../../../StoreContext';\nimport MyPosts from './MyPosts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet MyPostsContainer = props => {\n  return /*#__PURE__*/_jsxDEV(StoreContext.Consumer, {\n    children: pstore => {\n      let state = store.getState();\n\n      let onAddPost = () => {\n        store.dispatch(addPostCreate());\n      };\n\n      let onPostChange = text => {\n        store.dispatch(updatePostCreate(text));\n      };\n\n      return /*#__PURE__*/_jsxDEV(MyPosts, {\n        onPostChange: onPostChange,\n        onAddPost: onAddPost,\n        postData: state.profilePage.postData,\n        newPostText: state.profilePage.newPostText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 16\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 12\n  }, this);\n};\n\n_c = MyPostsContainer;\nexport default MyPostsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyPostsContainer\");","map":{"version":3,"names":["React","addPostCreate","updatePostCreate","StoreContext","MyPosts","MyPostsContainer","props","pstore","state","store","getState","onAddPost","dispatch","onPostChange","text","profilePage","postData","newPostText"],"sources":["/Users/andrey/Desktop/Верстка/React-learning/first-app/src/Components/Profile/Myposts/MyPostsContainer.jsx"],"sourcesContent":["import React from 'react'\nimport { addPostCreate, updatePostCreate } from '../../../Redux/profileReducer';\nimport StoreContext from '../../../StoreContext';\nimport MyPosts from './MyPosts';\n\nlet MyPostsContainer = (props) =>{\n   \n    return <StoreContext.Consumer> \n        { pstore => {\n            let state = store.getState()\n\n            let onAddPost = () => {\n              store.dispatch(addPostCreate())}\n          \n            let onPostChange =(text) => {\n              store.dispatch(updatePostCreate(text))}\n    \n        return <MyPosts onPostChange={onPostChange} onAddPost={onAddPost}\n                postData={state.profilePage.postData}\n                newPostText={state.profilePage.newPostText}/>}}\n      </StoreContext.Consumer>}\n\n   \nexport default MyPostsContainer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,+BAAhD;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,IAAIC,gBAAgB,GAAIC,KAAD,IAAU;EAE7B,oBAAO,QAAC,YAAD,CAAc,QAAd;IAAA,UACDC,MAAM,IAAI;MACR,IAAIC,KAAK,GAAGC,KAAK,CAACC,QAAN,EAAZ;;MAEA,IAAIC,SAAS,GAAG,MAAM;QACpBF,KAAK,CAACG,QAAN,CAAeX,aAAa,EAA5B;MAAgC,CADlC;;MAGA,IAAIY,YAAY,GAAGC,IAAD,IAAU;QAC1BL,KAAK,CAACG,QAAN,CAAeV,gBAAgB,CAACY,IAAD,CAA/B;MAAuC,CADzC;;MAGJ,oBAAO,QAAC,OAAD;QAAS,YAAY,EAAED,YAAvB;QAAqC,SAAS,EAAEF,SAAhD;QACC,QAAQ,EAAEH,KAAK,CAACO,WAAN,CAAkBC,QAD7B;QAEC,WAAW,EAAER,KAAK,CAACO,WAAN,CAAkBE;MAFhC;QAAA;QAAA;QAAA;MAAA,QAAP;IAEsD;EAZnD;IAAA;IAAA;IAAA;EAAA,QAAP;AAa2B,CAf/B;;KAAIZ,gB;AAkBJ,eAAeA,gBAAf"},"metadata":{},"sourceType":"module"}