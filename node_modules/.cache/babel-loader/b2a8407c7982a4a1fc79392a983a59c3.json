{"ast":null,"code":"var _jsxFileName = \"/Users/andrey/Desktop/\\u0412\\u0435\\u0440\\u0441\\u0442\\u043A\\u0430/React-learning/first-app/src/Components/Profile/Myposts/MyPostsContainer.jsx\";\nimport React from 'react';\nimport { addPostCreate, updatePostCreate } from '../../../Redux/profileReducer';\nimport StoreContext from '../../../StoreContext';\nimport MyPosts from './MyPosts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyPostsContainer = props => {\n  return /*#__PURE__*/_jsxDEV(StoreContext.Consumer, {\n    children: [\"let state = props.store.getState() let onAddPost = () => \", props.store.dispatch(addPostCreate()), \"let onPostChange =(text) => \", props.store.dispatch(updatePostCreate(text)), \"return \", /*#__PURE__*/_jsxDEV(MyPosts, {\n      onPostChange: onPostChange,\n      onAddPost: onAddPost,\n      postData: state.profilePage.postData,\n      newPostText: state.profilePage.newPostText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 7\n  }, this);\n};\n\n_c = MyPostsContainer;\nexport default MyPostsContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyPostsContainer\");","map":{"version":3,"names":["React","addPostCreate","updatePostCreate","StoreContext","MyPosts","MyPostsContainer","props","store","dispatch","text","onPostChange","onAddPost","state","profilePage","postData","newPostText"],"sources":["/Users/andrey/Desktop/Верстка/React-learning/first-app/src/Components/Profile/Myposts/MyPostsContainer.jsx"],"sourcesContent":["import React from 'react'\nimport { addPostCreate, updatePostCreate } from '../../../Redux/profileReducer';\nimport StoreContext from '../../../StoreContext';\nimport MyPosts from './MyPosts';\n\nconst MyPostsContainer = (props) =>{\n    \n    return (\n      <StoreContext.Consumer>\n\n    let state = props.store.getState()\n\n    let onAddPost = () => {\n      props.store.dispatch(addPostCreate())}\n  \n    let onPostChange =(text) => {\n      props.store.dispatch(updatePostCreate(text))}\n    \n    return <MyPosts onPostChange={onPostChange} onAddPost={onAddPost}\n            postData={state.profilePage.postData}\n            newPostText={state.profilePage.newPostText}/>\n            \n    </StoreContext.Consumer>)}\n      \n\n   \nexport default MyPostsContainer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,+BAAhD;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAU;EAE/B,oBACE,QAAC,YAAD,CAAc,QAAd;IAAA,wEAKAA,KAAK,CAACC,KAAN,CAAYC,QAAZ,CAAqBP,aAAa,EAAlC,CALA,kCAQAK,KAAK,CAACC,KAAN,CAAYC,QAAZ,CAAqBN,gBAAgB,CAACO,IAAD,CAArC,CARA,0BAUK,QAAC,OAAD;MAAS,YAAY,EAAEC,YAAvB;MAAqC,SAAS,EAAEC,SAAhD;MACC,QAAQ,EAAEC,KAAK,CAACC,WAAN,CAAkBC,QAD7B;MAEC,WAAW,EAAEF,KAAK,CAACC,WAAN,CAAkBE;IAFhC;MAAA;MAAA;MAAA;IAAA,QAVL;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAe0B,CAjB9B;;KAAMV,gB;AAqBN,eAAeA,gBAAf"},"metadata":{},"sourceType":"module"}