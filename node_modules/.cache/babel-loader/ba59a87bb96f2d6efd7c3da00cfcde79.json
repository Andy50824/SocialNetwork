{"ast":null,"code":"import { profileAPI } from \"../api/usersAPI\";\nconst addPost = 'ADD-POST';\nconst updatePost = 'UPDATE-POST';\nconst set_profile = 'set-profile';\nconst set_status = 'set-status';\nlet initialState = {\n  postData: [{\n    id: 1,\n    message: \"Hi, how are you?\",\n    like: 5\n  }, {\n    id: 2,\n    message: \"It's my first post\",\n    like: 6\n  }, {\n    id: 3,\n    message: \"and my second post\",\n    like: 10\n  }],\n  profile: null,\n  userStatus: 'Hello'\n};\n\nconst profileReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case addPost:\n      let newPost = {\n        id: 4,\n        message: action.newPost,\n        like: 0\n      };\n      return { ...state,\n        postData: [...state.postData, newPost]\n      };\n\n    case updatePost:\n      return { ...state,\n        newPostText: action.updateData\n      };\n\n    case set_profile:\n      return { ...state,\n        profile: action.profile\n      };\n\n    case set_status:\n      return { ...state,\n        userStatus: action.userStatus\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const addPostCreate = newPost => ({\n  type: addPost,\n  newPost\n});\nexport const setProfile = profile => ({\n  type: set_profile,\n  profile\n});\nexport const setStatus = userStatus => ({\n  type: set_status,\n  userStatus\n});\nexport const updatePostCreate = text => ({\n  type: updatePost,\n  updateData: text\n});\nexport const getProfile = user => {\n  return dispatch => {\n    profileAPI.getUser(user).then(data => {\n      dispatch(setProfile(data));\n    });\n  };\n};\nexport const getStatus = userId => {\n  return dispatch => {\n    profileAPI.getStatus(userId).then(data => {\n      dispatch(setStatus(data));\n    });\n  };\n};\nexport const updateStatus = status => {\n  return dispatch => {\n    profileAPI.updateStatus(status).then(data => {\n      if (data.resultCode === 0) {\n        dispatch(setStatus(status));\n      }\n    });\n  };\n};\nexport default profileReducer;","map":{"version":3,"names":["profileAPI","addPost","updatePost","set_profile","set_status","initialState","postData","id","message","like","profile","userStatus","profileReducer","state","action","type","newPost","newPostText","updateData","addPostCreate","setProfile","setStatus","updatePostCreate","text","getProfile","user","dispatch","getUser","then","data","getStatus","userId","updateStatus","status","resultCode"],"sources":["/Users/andrey/Desktop/networkproject/SocialNetwork/src/Redux/profileReducer.js"],"sourcesContent":["import { profileAPI } from \"../api/usersAPI\";\n\nconst addPost = 'ADD-POST'\nconst updatePost = 'UPDATE-POST'\nconst set_profile = 'set-profile'\nconst set_status = 'set-status'\n\nlet initialState = {\n    postData: [\n        { id: 1, message: \"Hi, how are you?\", like: 5 },\n        { id: 2, message: \"It's my first post\", like: 6 },\n        { id: 3, message: \"and my second post\", like: 10 }\n    ],\n    profile: null,\n    userStatus: 'Hello',\n    \n};\n\nconst profileReducer = (state = initialState, action) => {\n    \n    switch (action.type) {\n        case addPost: \n            let newPost = {\n                id: 4,\n                message: action.newPost,\n                like: 0}\n\n            return {...state,\n                postData: [...state.postData, newPost],\n                \n            }\n  \n        case updatePost: \n            return {...state,\n                newPostText: action.updateData};\n        \n        case set_profile: \n            return {...state,\n                profile: action.profile};\n\n        case set_status: \n            return {...state,\n                userStatus: action.userStatus};\n\n        default:\n            return state\n}}\n\nexport const addPostCreate = (newPost) => ({type: addPost,newPost})\nexport const setProfile = (profile) => ({type: set_profile, profile})\nexport const setStatus = (userStatus) => ({type: set_status, userStatus})\nexport const updatePostCreate = (text) => ({\n    type: updatePost, updateData: text})\n\nexport const getProfile = (user) => {\n    return (dispatch) => {\n        profileAPI.getUser(user).then(  \n            data => {\n                dispatch(setProfile(data))\n            })\n    }}\n\nexport const getStatus = (userId) => {\n    return (dispatch) => {\n        profileAPI.getStatus(userId).then(  \n            data => {\n                dispatch(setStatus(data))\n            })\n    }}\n\nexport const updateStatus = (status) => {\n    return (dispatch) => {\n        profileAPI.updateStatus(status).then(  \n            data => {\n                if (data.resultCode === 0) {\n                    dispatch(setStatus(status))}\n            })\n    }}\n   \nexport default profileReducer"],"mappings":"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"},"metadata":{},"sourceType":"module"}