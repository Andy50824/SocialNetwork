{"ast":null,"code":"var _jsxFileName = \"/Users/andrey/Desktop/\\u0412\\u0435\\u0440\\u0441\\u0442\\u043A\\u0430/React-learning/first-app/src/Components/Dialogs/Dialogs.jsx\";\nimport React from 'react';\nimport s from './Dialogs.module.css';\nimport DialogsItem from './DialogsItem/DialogsItem';\nimport DialogsMessage from './DialogMessage/DialogsMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet dialogsItems = dialogsData.map(d => /*#__PURE__*/_jsxDEV(DialogsItem, {\n  name: d.name,\n  id: d.id\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 15\n}, this));\nlet messageItems = messageData.map(m => /*#__PURE__*/_jsxDEV(DialogsMessage, {\n  message: m.message\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 15\n}, this));\n\nconst Dialogs = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.dialogs,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.dialogsItems,\n      children: props.dialogsItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.messages,\n      children: messageItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Dialogs;\nexport default Dialogs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dialogs\");","map":{"version":3,"names":["React","s","DialogsItem","DialogsMessage","dialogsItems","dialogsData","map","d","name","id","messageItems","messageData","m","message","Dialogs","props","dialogs","messages"],"sources":["/Users/andrey/Desktop/Верстка/React-learning/first-app/src/Components/Dialogs/Dialogs.jsx"],"sourcesContent":["import React from 'react'\nimport s from './Dialogs.module.css'\nimport DialogsItem from './DialogsItem/DialogsItem'\nimport DialogsMessage from './DialogMessage/DialogsMessage'\n\n\nlet dialogsItems = dialogsData\n    .map(d => <DialogsItem name={d.name} id={d.id} /> )\n    \nlet messageItems = messageData\n    .map(m => <DialogsMessage message={m.message}/>)\n\nconst Dialogs = (props) => {\n    return(\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                {props.dialogsItems}\n            </div>\n            <div className={s.messages}>\n                {messageItems}\n            </div>\n        </div>\n    )\n\n}\n\nexport default Dialogs\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,sBAAd;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,cAAP,MAA2B,gCAA3B;;AAGA,IAAIC,YAAY,GAAGC,WAAW,CACzBC,GADc,CACVC,CAAC,iBAAI,QAAC,WAAD;EAAa,IAAI,EAAEA,CAAC,CAACC,IAArB;EAA2B,EAAE,EAAED,CAAC,CAACE;AAAjC;EAAA;EAAA;EAAA;AAAA,QADK,CAAnB;AAGA,IAAIC,YAAY,GAAGC,WAAW,CACzBL,GADc,CACVM,CAAC,iBAAI,QAAC,cAAD;EAAgB,OAAO,EAAEA,CAAC,CAACC;AAA3B;EAAA;EAAA;EAAA;AAAA,QADK,CAAnB;;AAGA,MAAMC,OAAO,GAAIC,KAAD,IAAW;EACvB,oBACI;IAAK,SAAS,EAAEd,CAAC,CAACe,OAAlB;IAAA,wBACI;MAAK,SAAS,EAAEf,CAAC,CAACG,YAAlB;MAAA,UACKW,KAAK,CAACX;IADX;MAAA;MAAA;MAAA;IAAA,QADJ,eAII;MAAK,SAAS,EAAEH,CAAC,CAACgB,QAAlB;MAAA,UACKP;IADL;MAAA;MAAA;MAAA;IAAA,QAJJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAWH,CAZD;;KAAMI,O;AAcN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}